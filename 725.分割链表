/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode[] splitListToParts(ListNode head, int k) {
        if(head == null){
            return null;
        }
        
        int count = 0;
        ListNode dummy = head;
        while(dummy != null){
            count++;
            dummy = dummy.next;
        }

        dummy = head;
        ListNode node = new ListNode(0);
        ListNode[] list = new ListNode[k];
        if(count <= k){
            for(int i=0;i<k;i++){
                if(dummy == null){
                    list[i] = null;
                }else{
                    node = dummy.next;
                    list[i] = dummy;
                    dummy.next = null;
                    dummy = node;
                }
            }
            return list;
        }

        


        return null;
    }
}
